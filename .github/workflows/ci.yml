name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.23.x, 1.24.x, 1.25.x]
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Verify dependencies
      run: go mod verify

    - name: Build
      run: go build -v ./...

    - name: Run go vet
      run: go vet ./...

    - name: Run tests
      run: go test -race -vet=off ./...

  build-matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: stable

    - name: Build for ${{ matrix.goos }}/${{ matrix.goarch }}
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        echo "Building for ${{ matrix.goos }}/${{ matrix.goarch }}"
        go build -v -ldflags="-s -w" -o cpu-benchmarking-tool .
        ls -la cpu-benchmarking-tool*

  test-binary:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: stable

    - name: Build native binary
      run: |
        go build -v -ldflags="-s -w" -o cpu-benchmarking-tool .

    - name: Test binary functionality
      run: |
        echo "Testing binary functionality"
        ./cpu-benchmarking-tool -v
        ./cpu-benchmarking-tool -t 5 -b 128 -m single
        ./cpu-benchmarking-tool -t 5 -b 128 -m pool -w 2

  goreleaser-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: stable

    - name: Check GoReleaser config
      uses: goreleaser/goreleaser-action@v6
      with:
        distribution: goreleaser
        version: '~> v2'
        args: check

  docker-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Extract metadata for testing
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: goroutines-tester
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-

    - name: Build Docker image (test build)
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64  # Только amd64 для CI (быстрее)
        push: false  # Не пушим, только проверяем сборку
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          VERSION=${{ github.ref_name }}
          COMMIT=${{ github.sha }}
          DATE=${{ github.event.head_commit.timestamp }}
